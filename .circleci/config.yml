version: 2.1

jobs:
  build:
    working_directory: ~/repo
    docker:
      - image: circleci/golang:1.15.8
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}
      - run:
          name: Install Dependencies
          command: go mod download
      - save_cache:
          key: go-mod-v4-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - run:
          name: Run tests
          command: |
            mkdir -p /tmp/test-reports
            gotestsum --junitfile /tmp/test-reports/unit-tests.xml
      - store_test_results:
          path: /tmp/test-reports

workflows:
  sample:
    jobs:
      - build

# version: 2 
# jobs: 
#   build: 
#     docker:
#       - image: circleci/golang:1.12
#       - image: circleci/postgres:9.6-alpine
#         environment: 
#           POSTGRES_USER: user_activity_service_db_user
#           POSTGRES_DB: user_activity_service_db_test

#     parallelism: 2

#     environment: 
#       TEST_RESULTS: /tmp/test-results 

#     steps: 
#       - checkout 
#       - run: mkdir -p $TEST_RESULTS 
#       - restore_cache: 
#           keys:
#             - go-mod-v4-{{ checksum "go.sum" }}

#       #  Wait for Postgres to be ready before proceeding
#       - run:
#           name: Waiting for Postgres to be ready
#           command: dockerize -wait tcp://localhost:5432 -timeout 1m

#       - run:
#           name: Run unit tests
#           environment: # environment variables for the database url and path to migration files
#             CONTACTS_DB_URL: "postgres://circleci-demo-go@localhost:5432/circle_test?sslmode=disable"
#             CONTACTS_DB_MIGRATIONS: /home/circleci/project/db/migrations

#           # store the results of our tests in the $TEST_RESULTS directory
#           command: |
#             PACKAGE_NAMES=$(go list ./... | circleci tests split --split-by=timings --timings-type=classname)
#             gotestsum --junitfile ${TEST_RESULTS}/gotestsum-report.xml -- $PACKAGE_NAMES

#       - run: make # pull and build dependencies for the project

#       - save_cache:
#           key: go-mod-v4-{{ checksum "go.sum" }}
#           paths:
#             - "/go/pkg/mod"

#       - run:
#           name: Start service
#           environment:
#             CONTACTS_DB_URL: "postgres://circleci-demo-go@localhost:5432/circle_test?sslmode=disable"
#             CONTACTS_DB_MIGRATIONS: /home/circleci/project/db/migrations
#           command: ./workdir/contacts
#           background: true # keep service running and proceed to next step

#       - run:
#           name: Validate service is working
#           command: |
#             sleep 5
#             curl --retry 10 --retry-delay 1 -X POST --header "Content-Type: application/json" -d '{"email":"test@example.com","name":"Test User"}' http://localhost:8080/contacts

#       - store_artifacts: # upload test summary for display in Artifacts
#           path: /tmp/test-results
#           destination: raw-test-output

#       - store_test_results: # upload test results for display in Test Summary
#           path: /tmp/test-results

# workflows:
#   version: 2
#   build-workflow:
#     jobs:
#       - build

# VS Code Extension Version: 1.4.0